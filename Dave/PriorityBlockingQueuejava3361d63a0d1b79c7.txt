{"version":"3361d63a0d1b79c7","fileName":"PriorityBlockingQueue.java","fileSimpleName":"PriorityBlockingQueue","fileType":"java","notes":{"484":"元素个数大于对大小，进行扩容","548":"如果dequeue值为null，则阻塞consumer","485":"扩容","358":"k是堆元素的个数","487":"判断是否自定义了比较算法","359":"获取父节点的下标","360":"获取父节点的元素","328":"获取顶端元素","489":"使用默认比较算法，构建小顶堆","361":"当前节点和父节点比较，可以看成 key-e ，key \u003e e \u003d 正数，\u003c 是负数，因为是小顶堆，如果是正数则跳出循环","329":"获取尾端元素","363":"如果e\u003ekey，则e下沉到当前堆下标","395":"x是尾端元素","364":"e\u003ekey，key上浮","493":"条件队列出队","366":"对key进行赋值","398":"获取左节点的下标","495":"释放锁，并对消费者线程进行唤醒","399":"左节点元素","400":"获取右节点下标","402":"左节点和右节点比较","403":"l\u003er，所有r赋值给l","404":"key和l与r比较的最小值进行比较","405":"key\u003cl与r的最小值，则跳出循环"}}