{"version":"82ba687ba5b25fd1","fileName":"ForkJoinPool.java","fileSimpleName":"ForkJoinPool","fileType":"java","notes":{"1729":"通过cas将窃取的任务置位null","2373":"构建工作队列","1541":"ws.length是偶数所以 n 也是偶数","1543":"m\u003d奇数","1480":"获取线程工厂，默认是DefaultForkJoinWorkerThreadFactory in ForkJoinPool","1544":"i是奇数","1547":"step最终偶数","1484":"新建线程并绑定到新建的工作队列到workQueues的奇数位","2380":"将工作队列放到工作队列数组","1548":"i最终是奇数","1485":"开启线程","1550":"n \u003c\u003c\u003d 1 ， n是偶数","2320":"获取probe值","1559":"存放到ws的奇数位","1690":"通过scan获取一个任务，涉及到工作窃取","1691":"执行获取到的任务","1692":"没有获取到任务，阻塞工作线程","1055":"如果是工作窃取的任务直接执行","1633":"创建线程","2402":"workQueues初始化为null，所以不会执行判断中的逻辑","2403":"获取偶数位的工作队列q","2404":"对q进行加锁","2341":"通过 n \u003d (n + 1) \u003c\u003c 1; 可知，n最后是偶数","2342":"构建n个workQueue数组","806":"双端队列底部，使用volatile修饰是为了防止多行程竞争窃取，用于保证可见性","808":"使用数组存储任务","2409":"将任务放到q工作队列上","1516":"创建工作线程","2349":"k一定是偶数","2350":"对工作队列加锁","751":"65535","2416":"释放锁","1648":"唤醒阻塞的线程","753":"65534","2418":"初始化会执行这个方法","2357":"获取工作队列的top在内存的offset","2358":"将任务放到工作队列的j位置","2359":"设置top的index值","2360":"任务提交完成","2363":"释放队列锁","2366":"任务提交成功，创建工作线程执行运行该任务","1726":"任务窃取","1535":"构建新的工作队列，当前线程建立绑定关系"}}